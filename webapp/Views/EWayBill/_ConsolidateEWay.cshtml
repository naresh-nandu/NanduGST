@using System.Dynamic
@model List<System.Collections.IDictionary>
@{
    WebGrid grid = null;
    var result = new List<dynamic>();
    if (ViewBag.CONSEWBList != null)
    {
        //TempData["Data"] = Model;
        foreach (var emprow in ViewBag.CONSEWBList)
        {
            var row = (IDictionary<string, object>)new ExpandoObject();
            Dictionary<string, object> eachEmpRow = (Dictionary<string, object>)emprow;

            foreach (KeyValuePair<string, object> keyValuePair in eachEmpRow)
            {
                row.Add(keyValuePair);
            }
            result.Add(row);
        }
        grid = new WebGrid(source: result, canPage: true, canSort: true);
    }
}
<script type="text/javascript">

    $(document).ready(function () {

        oTableStaticFlow_CONSEWBGEN = $('#CONSEWBGEN').DataTable({
            "lengthMenu": [[10, 50, 100, 500, 1000, -1], [10, 50, 100, 500, 1000, "All"]],
            "aoColumnDefs": [{
                'bSortable': false,
                'aTargets': [0]
            }],
        });
        $($(".sorting_asc").get(0)).removeClass("sorting_asc");

        $("#chkSelectAll_CONSEWBGEN").click(function () {
            var cols = oTableStaticFlow_CONSEWBGEN.column(0).nodes(),
                state = this.checked;

            for (var i = 0; i < cols.length; i += 1) {
                cols[i].querySelector("input[type='checkbox']").checked = state;
            }
        });

        $('.chkSelectAll_CONSEWBGEN').click(function () {
            var status = this.checked;
            if (status == false) {
                $("#chkSelectAll_CONSEWBGEN").prop("checked", false);
            }
        });

        $("#CONSEWBGEN").on("click", ".chkSelectAll_CONSEWBGEN", function () {
            var status = this.checked;
            if (status == false) {
                $("#chkSelectAll_CONSEWBGEN").prop("checked", false);
            }
        });

        $("#btnCONSEWBGEN").click(function () {
            var allVals = [];
            var selectIds = ',';
            var cols = oTableStaticFlow_CONSEWBGEN.column(0).nodes();
            for (var i = 0; i < cols.length; i += 1) {
                if (cols[i].querySelector("input[type='checkbox']").checked == true) {
                    var chkVal = cols[i].querySelector("input[type='checkbox']").value;
                    //allVals.push(chkVal);
                    selectIds = selectIds + chkVal + ','
                }
                else {
                    //selectIds = selectIds+'0'+ ','
                    //allVals.push(0);
                }
            }
            //console.log(selectIds);
            $("#InvIds").val();
            $("#InvIds").val(selectIds);
        });

    });

    function ConsEWBGeneration(transDocNo, transDocDate) {
        swal({
            title: "",
            text: "Are you sure that you want to Generate CONSOLIDATED EWAYBILL?",
            type: "warning",
            showCancelButton: true,
            closeOnConfirm: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Generate",
            confirmButtonColor: "#ec6c62"
        },
        function (isConfirm) {
            if (isConfirm) {

                var obj = {
                    transDocNo: transDocNo,
                    transDocDate: transDocDate
                }

                $.ajax({
                    type: "POST",
                    url: '/EWayBill/CONS_EWB_API',
                    data: JSON.stringify(obj),
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //location.reload();
                        window.location.href = '/EWayBill/Home';
                    }

                });
            }
        })
    }
</script>

<style>
    table.dataTable thead .sorting:after {
        opacity: 0 !important;
        content: none !important;
    }

    .dataTables_wrapper .dataTables_filter input {
        margin-left: 0em !important;
    }

    table.gridtable th {
        text-align: center;
        font-weight: bold;
        font-size: 14px;
        color: #3276b1;
    }

    table.gridtable td {
        text-align: center;
    }

    #chkSelectAll {
        margin-left: 4px !important;
    }

    .headerstyle {
        background-color: #cbd2d5 !important;
        color: #000 !important;
        font-weight: bold;
    }
</style>

<div class="table table-responsive">

    @if (ViewBag.CONSEWBList != null)
    {
        if (Enumerable.Count(ViewBag.CONSEWBList) > 0)
        {
            int i = 1;
            <div class="container-fuild" style="background-color:white;">
                <table id="CONSEWBGEN" class="table table-striped table-responsive table-bordered table-hover gridtable">
                    <thead>
                        <tr>
                            @*<td align="center"><input type="checkbox" id="chkSelectAll_AT" name="ids"/></td>*@
                            <th>S.No</th>
                            <th>From Place</th>
                            <th>Vehicle No</th>
                            <th>Transaction Document No</th>
                            <th>Transaction Document Date</th>
                            <th>Consolidate EWay BillNo</th>
                            <th>Consolidate EWay BillDate</th>
                            <th>Print</th>
                            <th>Download</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in result)
                        {
                            string strcEwbNo = "";
                            strcEwbNo = Convert.ToString(item.cEwbNo);

                            <tr>
                                @*<td align="center"><input class="check-box chkSelectAll_AT" id="ids" name="ids" type="checkbox" value="@item.atid" /></td>*@
                                <td>@Convert.ToInt32(i++)</td>
                                <td>@item.fromPlace</td>
                                <td>@item.vehicleNo</td>
                                <td>@item.transDocNo</td>
                                <td>@item.transDocDate</td>
                                <td>@item.cEwbNo</td>
                                <td>@item.cEWBDate</td>
                                
                                <td>
                                    @Html.ActionLink("Print", "CONSEWB", "EWBPrint", new { cewbNo = item.cEwbNo}, new { @class = "btn btn-primary", @Style = "font-weight:bold;Border-radius:5px;width:80px;margin-bottom:3px;padding:3px;" })
                                </td>
                                <td>@Html.ActionLink("Download", "CDownloadPdf", "EWBPrint", new { cewbNo = item.cEwbNo }, new { @class = "btn btn-primary", @Style = "font-weight:bold;Border-radius:5px;width:80px;margin-bottom:3px;padding:3px;" })</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>


        }

        else
        {
            <h3>No Data Found</h3>
        }
    }
</div>

<script>
    function validateCheckBoxes() {
        var isValid = false;
        //alert("Check if any checkbox is not checked...");
        var allRows = document.getElementsByTagName("input");
        for (var i = 0; i < allRows.length; i++) {
            if (allRows[i].type == 'checkbox' && allRows[i].name == 'ids') {
                if (allRows[i].checked == true) {
                    return true;
                }

            }
        }
        return isValid;
    }

    function ShowMessage() {
        if (!validateCheckBoxes()) {
            alert("Please select atleast one invoice to delete.");
            return false;
        }
        else {
            return confirm('Are you sure to Delete?');
        }

    }

</script>
