@model IEnumerable<SmartAdminMvc.Models.TBL_Audit_Log>

@{
    ViewBag.Title = "WeP ASP PANEL";
    var grid = new WebGrid(source: Model, rowsPerPage: 10);
}

<script type="text/javascript">
    $(document).ready(function () {
        oTableStaticFlow = $('#example').DataTable({
            "aoColumnDefs": [{
                'bSortable': true,
                'aTargets': [0]
            }],
        });

        //$($(".sorting_asc").get(0)).removeClass("sorting_asc");


        $("#chkSelectAll").click(function () {
            var cols = oTableStaticFlow.column(0).nodes(),
                state = this.checked;

            for (var i = 0; i < cols.length; i += 1) {
                cols[i].querySelector("input[type='checkbox']").checked = state;
            }
        });

        $('.chkSelectAll').click(function () {
            var status = this.checked;
            if (status == false) {
                $("#chkSelectAll").prop("checked", false);
            }
        });

        $("#example").on("click", ".chkSelectAll", function () {
            var status = this.checked;
            if (status == false) {
                $("#chkSelectAll").prop("checked", false);
            }
        });

    });

</script>
<style>
    table.dataTable thead .sorting:after {
        opacity: 0 !important;
        content: none !important;
    }

    .dataTables_wrapper .dataTables_filter input {
        margin-left: 0em !important;
    }

    table.gridtable th {
        text-align: center;
        font-weight: bold;
        font-size: 14px;
        color: #3276b1;
    }

    table.gridtable td {
        text-align: center;
    }

    #chkSelectAll {
        margin-left: 4px !important;
    }

    .dt-toolbar {
        border-bottom: none !important;
    }

    .headerstyle {
        background-color: #cbd2d5 !important;
        color: #000 !important;
        font-weight: bold;
    }

    #example_length {
        margin-right: 55px;
    }
</style>



@if (TempData["Success"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            swal({
                title: "",
                text: "@TempData["success"]",
                type: "success",
                confirm: {
                    text: "OK",
                    value: true,
                    visible: true,
                    className: "",
                    closeModal: true,
                },
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "OK",
                closeOnConfirm: true,

            }
     );
        };
    </script>
}

@if (TempData["Error"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            swal({
                title: "",
                text: "@TempData["Error"]",
                type: "error",
                width: "20px",
                confirm: {
                    text: "OK",
                    value: true,
                    visible: true,
                    className: "",
                    closeModal: true,
                },
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "OK",
                closeOnConfirm: true,

            }
     );
        };
    </script>
}
<div id="content">

    <div class="row">

        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">

                <i class="fa-fw fa fa-home"></i>
                Report
                <span>
                    >&nbsp;
                    Audit Log
                </span>
            </h1>
        </div>


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">


                <div class="jarviswidget jarviswidget-color-teal" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="font-weight:bold;">Auditlog Report</h2>
                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            <div id="comment-form1" class="smart-form">

                                <br />


                                <form action="@Url.Action("AuditLog", "Report")" method="post" id="checkout-form" class="smart-form" novalidate="novalidate">
                                    @*@Html.AntiForgeryToken()*@
                                    <fieldset>

                                        <div class="row">
                                            <section class="col-md-2">
                                                <label class="input">
                                                </label>
                                            </section>

                                            <section class="col-lg-4">
                                                <label class="input">
                                                    <i class="icon-append fa fa-calendar"></i>
                                                    <input class="form-control datepicker" name="from" id="to" type="text" value="@ViewBag.FromDate" placeholder="From Date" data-dateformat='mm/dd/yy'>
                                                </label>
                                            </section>

                                            <section class="col-lg-4">
                                                <label class="input">
                                                    <i class="icon-append fa fa-calendar"></i>
                                                    <input class="form-control datepicker" name="to" id="from" type="text" value="@ViewBag.ToDate" placeholder="To Date" data-dateformat='mm/dd/yy'>
                                                </label>
                                            </section>

                                            <section class="col-md-2">
                                                <label class="input">
                                                </label>
                                            </section>
                                        </div>

                                    </fieldset>
                                    <br />

                                    <br />

                                    <footer>
                                        <div class="text-center col-md-7">
                                            <button type="submit" class="btn btn-primary" style="border-radius:8px;font-weight:bold;width:120px;text-align:center;height:30px;background-color:#496949">
                                                Submit
                                            </button>
                                        </div>
                                    </footer>

                                </form>

                            </div>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>

            </article>

            @if (Model != null)
            {
                if (Enumerable.Count(Model) > 0)
                {

                    using (Html.BeginForm("ExportData", "Report", new { @Class = "smart-form" }))
                    {
                        int i = 1;
                        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">

                                <header>
                                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                                    <h2 style="font-weight:bold;">View & Export Auditlog Report</h2>
                                </header>


                                <div class="table-responsive" style="overflow:auto">
                                    <div class="container-fuild" style="background-color:white;">

                                        <table id="example" class="table table-striped table-responsive table-bordered table-hover gridtable" style="width:95%">
                                            <thead>

                                                <tr>
                                                    <th>S.No</th>
                                                    <th>Username</th>
                                                    <th>Audit Message</th>
                                                    <th>Audit Date</th>

                                                </tr>
                                            </thead>


                                            <tbody>
                                                @foreach (var item in Model)
                                                {
                                                    <tr>
                                                        <td>@Convert.ToInt32(i++)</td>
                                                        <td>@item.FK_Audit_Username</td>
                                                        <td>@item.Audit_Message</td>
                                                        <td>@item.Audit_DateTime</td>

                                                    </tr>

                                                }
                                            </tbody>

                                        </table>
                                    </div>
                                </div>
                                <div>
                                   
                                    
                                    <footer>

                                        <div class="text-center col-md-12">
                                          &nbsp;&nbsp; &nbsp;&nbsp; <input type="submit" name="Export" id="Export" value="Export" class="btn btn-primary" style="border-radius:8px;font-weight:bold;width:120px;margin-bottom:25px;text-align:center;height:30px;background-color:#71843f;border:#71843f" />

                                        </div>
                                    </footer>
                                </div>
                            </div>
                        </article>
                    }
                }
                else
                {
                    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">
                            <header>
                                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                                <h2 style="font-weight:bold;">Customer List</h2>
                            </header>
                            <div class="table-responsive" style="overflow:auto">
                                <div class="container-fuild" style="background-color:white;">
                                    <h2 style="font-weight:500;text-align:center;color: #3276b1;">No Data Found</h2>
                                </div>
                            </div>
                        </div>
                    </article>
                }
            }

        </div>

        <!-- END ROW -->

    </section>


    <!-- end widget grid -->


</div>

@section pagespecific {

    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            var $checkoutForm = $('#checkout-form').validate({
                // Rules for form validation
                rules: {
                    from: {
                        required: true
                    },
                    to: {
                        required: true
                    },
                    actionlist: {
                        required: true

                    }
                },

                // Messages for form validation
                messages: {
                    from: {
                        required: 'Please select From Date'
                    },
                    to: {
                        required: 'Please select To Date'
                    },
                    actionlist: {
                        required: 'Please Select Action'

                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });




        })

    </script>

    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL Common.Functions!

        $(document).ready(function () {

            // PAGE RELATED SCRIPTS

            // Spinners
            $("#spinner").spinner();
            $("#spinner-decimal").spinner({
                step: 0.01,
                numberFormat: "n"
            });

            $("#spinner-currency").spinner({
                min: 5,
                max: 2500,
                step: 25,
                start: 1000,
                numberFormat: "C"
            });

            //Maxlength

            $('input[maxlength]').maxlength({
                warningClass: "label label-success",
                limitReachedClass: "label label-important",
            });


            // START AND FINISH DATE
            $('#startdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#finishdate').datepicker('option', 'minDate', selectedDate);
                }
            });

            $('#finishdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#startdate').datepicker('option', 'maxDate', selectedDate);
                }
            });

            // Date Range Picker
            $("#from").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 3,
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onClose: function (selectedDate) {
                    $("#to").datepicker("option", "maxDate", selectedDate);
                }

            });
            $("#to").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 3,
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onClose: function (selectedDate) {
                    $("#from").datepicker("option", "minDate", selectedDate);
                }
            });

            /*
             * TIMEPICKER
             */

            $('#timepicker').timepicker();

            /*
             * CLOCKPICKER
             */

            $('#clockpicker').clockpicker({
                placement: 'top',
                donetext: 'Done'
            });

            /*
             * JS SLIDER
             */

            $("#nouislider-1").noUiSlider({
                range: [2, 100],
                start: 55,
                handles: 1,
                connect: true,
            });

            $("#nouislider-2").noUiSlider({
                range: [0, 300],
                start: [55, 130],
                step: 60,
                handles: 2,
                connect: true
            });

            $("#nouislider-3").noUiSlider({
                range: [0, 1000],
                start: [264, 776],
                step: 1,
                connect: true,
                slide: function () {
                    var values = $(this).val();
                    $(".nouislider-value").text(values[0] + " - " + values[1]);
                }
            });

            $("#nouislider-4").noUiSlider({
                range: [0, 100],
                start: 50,
                handles: 1
            }).attr("disabled", "disabled");



            /*
             * ION SLIDER
             */

            $("#range-slider-1").ionRangeSlider({
                min: 0,
                max: 5000,
                from: 1000,
                to: 4000,
                type: 'double',
                step: 1,
                prefix: "$",
                prettify: false,
                hasGrid: true
            });

            $("#range-slider-2").ionRangeSlider();

            $("#range-slider-3").ionRangeSlider({
                min: 0,
                from: 2.3,
                max: 10,
                type: 'single',
                step: 0.1,
                postfix: " mm",
                prettify: false,
                hasGrid: true
            });

            $("#range-slider-4").ionRangeSlider({
                min: -50,
                max: 50,
                from: 5,
                to: 25,
                type: 'double',
                step: 1,
                postfix: "°",
                prettify: false,
                hasGrid: true
            });

            $("#range-slider-5").ionRangeSlider({
                min: 0,
                from: 0,
                max: 10,
                type: 'single',
                step: 0.1,
                postfix: " mm",
                prettify: false,
                hasGrid: true
            });


            /*
             * BOOTSTRAP DUALLIST BOX
             */

            var initializeDuallistbox = $('#initializeDuallistbox').bootstrapDualListbox({
                nonSelectedListLabel: 'Non-selected',
                selectedListLabel: 'Selected',
                preserveSelectionOnMove: 'moved',
                moveOnSelect: false,
                nonSelectedFilter: 'ion ([7-9]|[1][0-2])'
            });


            /*
             * COLOR PICKER
             */

            $('#colorpicker-1').colorpicker()
            $('#colorpicker-2').colorpicker()



            /*
             * KNOB
             */

            $('.knob').knob({
                change: function (value) {
                    //console.log("change : " + value);
                },
                release: function (value) {
                    //console.log(this.$.attr('value'));
                    //console.log("release : " + value);
                },
                cancel: function () {
                    //console.log("cancel : ", this);
                }
            });


            /*
             * X-Ediable
             */


            (function (e) {
                "use strict";
                var t = function (e) {
                    this.init("address", e, t.defaults)
                };
                e.fn.editableutils.inherit(t, e.fn.editabletypes.abstractinput);
                e.extend(t.prototype, {
                    render: function () {
                        this.$input = this.$tpl.find("input")
                    },
                    value2html: function (t, n) {
                        if (!t) {
                            e(n).empty();
                            return
                        }
                        var r = e("<div>").text(t.city).html() + ", " + e("<div>").text(t.street).html() +
                            " st., bld. " + e("<div>").text(t.building).html();
                        e(n).html(r)
                    },
                    html2value: function (e) {
                        return null
                    },
                    value2str: function (e) {
                        var t = "";
                        if (e)
                            for (var n in e)
                                t = t + n + ":" + e[n] + ";";
                        return t
                    },
                    str2value: function (e) {
                        return e
                    },
                    value2input: function (e) {
                        if (!e)
                            return;
                        this.$input.filter('[name="city"]').val(e.city);
                        this.$input.filter('[name="street"]').val(e.street);
                        this.$input.filter('[name="building"]').val(e.building)
                    },
                    input2value: function () {
                        return {
                            city: this.$input.filter('[name="city"]').val(),
                            street: this.$input.filter('[name="street"]').val(),
                            building: this.$input.filter('[name="building"]').val()
                        }
                    },
                    activate: function () {
                        this.$input.filter('[name="city"]').focus()
                    },
                    autosubmit: function () {
                        this.$input.keydown(function (t) {
                            t.which === 13 && e(this).closest("form").submit()
                        })
                    }
                });
                t.defaults = e.extend({}, e.fn.editabletypes.abstractinput.defaults, {
                    tpl: '<div class="editable-address"><label><span>City: </span><input type="text" name="city" class="input-small"></label></div><div class="editable-address"><label><span>Street: </span><input type="text" name="street" class="input-small"></label></div><div class="editable-address"><label><span>Building: </span><input type="text" name="building" class="input-mini"></label></div>',
                    inputclass: ""
                });
                e.fn.editabletypes.address = t
            })(window.jQuery);

            //ajax mocks
            $.mockjaxSettings.responseTime = 500;

            $.mockjax({
                url: '/post',
                response: function (settings) {
                    log(settings, this);
                }
            });

            $.mockjax({
                url: '/error',
                status: 400,
                statusText: 'Bad Request',
                response: function (settings) {
                    this.responseText = 'Please input correct value';
                    log(settings, this);
                }
            });

            $.mockjax({
                url: '/status',
                status: 500,
                response: function (settings) {
                    this.responseText = 'Internal Server Error';
                    log(settings, this);
                }
            });

            $.mockjax({
                url: '/groups',
                response: function (settings) {
                    this.responseText = [{
                        value: 0,
                        text: 'Guest'
                    }, {
                        value: 1,
                        text: 'Service'
                    }, {
                        value: 2,
                        text: 'Customer'
                    }, {
                        value: 3,
                        text: 'Operator'
                    }, {
                        value: 4,
                        text: 'Support'
                    }, {
                        value: 5,
                        text: 'Admin'
                    }];
                    log(settings, this);
                }
            });

            //TODO: add this div to page
            function log(settings, response) {
                var s = [],
                    str;
                s.push(settings.type.toUpperCase() + ' url = "' + settings.url + '"');
                for (var a in settings.data) {
                    if (settings.data[a] && typeof settings.data[a] === 'object') {
                        str = [];
                        for (var j in settings.data[a]) {
                            str.push(j + ': "' + settings.data[a][j] + '"');
                        }
                        str = '{ ' + str.join(', ') + ' }';
                    } else {
                        str = '"' + settings.data[a] + '"';
                    }
                    s.push(a + ' = ' + str);
                }
                s.push('RESPONSE: status = ' + response.status);

                if (response.responseText) {
                    if ($.isArray(response.responseText)) {
                        s.push('[');
                        $.each(response.responseText, function (i, v) {
                            s.push('{value: ' + v.value + ', text: "' + v.text + '"}');
                        });
                        s.push(']');
                    } else {
                        s.push($.trim(response.responseText));
                    }
                }
                s.push('--------------------------------------\n');
                $('#console').val(s.join('\n') + $('#console').val());
            }

            /*
             * X-EDITABLES
             */

            $('#inline').on('change', function (e) {
                if ($(this).prop('checked')) {
                    window.location.href = '?mode=inline#ajax/plugins.html';
                } else {
                    window.location.href = '?#ajax/plugins.html';
                }
            });

            if (window.location.href.indexOf("?mode=inline") > -1) {
                $('#inline').prop('checked', true);
                $.fn.editable.defaults.mode = 'inline';
            } else {
                $('#inline').prop('checked', false);
                $.fn.editable.defaults.mode = 'popup';
            }

            //defaults
            $.fn.editable.defaults.url = '/post';
            //$.fn.editable.defaults.mode = 'inline'; use this to edit inline

            //enable / disable
            $('#enable').click(function () {
                $('#user .editable').editable('toggleDisabled');
            });

            //editables
            $('#username').editable({
                url: '/post',
                type: 'text',
                pk: 1,
                name: 'username',
                title: 'Enter username'
            });

            $('#firstname').editable({
                validate: function (value) {
                    if ($.trim(value) == '')
                        return 'This field is required';
                }
            });

            $('#sex').editable({
                prepend: "not selected",
                source: [{
                    value: 1,
                    text: 'Male'
                }, {
                    value: 2,
                    text: 'Female'
                }],
                display: function (value, sourceData) {
                    var colors = {
                        "": "gray",
                        1: "green",
                        2: "blue"
                    }, elem = $.grep(sourceData, function (o) {
                        return o.value == value;
                    });

                    if (elem.length) {
                        $(this).text(elem[0].text).css("color", colors[value]);
                    } else {
                        $(this).empty();
                    }
                }
            });

            $('#status').editable();

            $('#group').editable({
                showbuttons: false
            });

            $('#vacation').editable({
                datepicker: {
                    todayBtn: 'linked'
                }
            });

            $('#dob').editable();

            $('#event').editable({
                placement: 'right',
                combodate: {
                    firstItem: 'name'
                }
            });

            $('#meeting_start').editable({
                format: 'yyyy-mm-dd hh:ii',
                viewformat: 'dd/mm/yyyy hh:ii',
                validate: function (v) {
                    if (v && v.getDate() == 10)
                        return 'Day cant be 10!';
                },
                datetimepicker: {
                    todayBtn: 'linked',
                    weekStart: 1
                }
            });

            $('#comments').editable({
                showbuttons: 'bottom'
            });

            $('#note').editable();
            $('#pencil').click(function (e) {
                e.stopPropagation();
                e.preventDefault();
                $('#note').editable('toggle');
            });

        })

    </script>
}